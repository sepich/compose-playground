version: '2.4'
services:

  thanos-receive-0:
    container_name: thanos-receive-0
    hostname: thanos-receive-0
    image: thanosio/thanos:v0.34.0-rc.1
    command:
      - receive
      - --tsdb.path=/data
      - --tsdb.retention=1d
      - --tsdb.allow-overlapping-blocks
      - --tsdb.min-block-duration=5m
      - --tsdb.max-block-duration=5m
#      - --tsdb.out-of-order.time-window=15m
      - --tsdb.memory-snapshot-on-shutdown
      - --label=replica="thanos-receive-0"
      - --receive.local-endpoint=thanos-receive-0:10901
      - --receive.tenant-label-name=prometheus
      # - --writer.intern
      # - --log.level=debug
      # ~/Projects/thanos-kit/thanos-kit inspect --objstore.config='{type: FILESYSTEM, config: {directory: "data/s3"}}'
      - |
        --objstore.config=type: FILESYSTEM
        config:
          directory: "/s3"
    volumes:
      - ./data/thanos-receive-0:/data
      - ./data/s3:/s3
    user: '65534'
    ports:
      - 10900:10902  # pprof

  thanos-receive-1:
    container_name: thanos-receive-1
    hostname: thanos-receive-1
    image: thanosio/thanos:v0.34.0-rc.1
    command:
      - receive
      - --tsdb.path=/data
      - --tsdb.retention=1d
      - --tsdb.allow-overlapping-blocks
      - --tsdb.min-block-duration=5m
      - --tsdb.max-block-duration=5m
#      - --tsdb.out-of-order.time-window=15m
      - --tsdb.memory-snapshot-on-shutdown
      - --label=replica="thanos-receive-1"
      - --receive.local-endpoint=thanos-receive-1:10901
      - --receive.tenant-label-name=prometheus
#      - --log.level=debug
      - |
        --objstore.config=type: FILESYSTEM
        config:
          directory: "/s3"
    volumes:
      - ./data/thanos-receive-1:/data
      - ./data/s3:/s3
    user: '65534'

  thanos-front:
    container_name: thanos-front
    hostname: thanos-front
    image: thanosio/thanos:v0.34.0-rc.1
    command:
      - receive
      - --tsdb.path=/data
      - --label=replica="thanos-front"
      - --receive.hashrings-file=/cfg/hashrings.json
      - --receive.replication-factor=2
      - --receive.hashrings-algorithm=ketama
      - --receive.tenant-label-name=prometheus
      - --log.level=debug
      #--receive.relabel-config
    volumes:
      - ./cfg/hashrings.json:/cfg/hashrings.json
      - ./data/thanos-front:/data
    user: '65534'

  thanos-query:
    container_name: thanos-query
    hostname: thanos-query
    image: thanosio/thanos:v0.34.0-rc.1
    command:
      - query
      - --query.auto-downsampling
      - --query.partial-response
      - --query.replica-label=replica
      - --query.replica-label=tenant_id
      - --query.conn-metric.label=store_type #external_labels,store_type : thanos_store_nodes_grpc_connections
      - --store=dns+thanos-receive-0:10901
      - --store=dns+thanos-receive-1:10901
#      - --store=dns+thanos-rule:10901
    user: '65534'
    ports:
    - 10902:10902

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    command:
      - --web.enable-lifecycle
      - --config.file=/cfg/prometheus.yml
      - --storage.tsdb.path=/data
      - --storage.tsdb.retention.time=15m
      - --storage.tsdb.min-block-duration=15m
      - --storage.tsdb.max-block-duration=15m
    volumes:
      - ./cfg/prometheus.yml:/cfg/prometheus.yml
      - ./data/prometheus:/data
    user: '65534'
    ports:
    - '9090:9090'

  prometheus2:
    container_name: prometheus2
    hostname: prometheus2
    image: prom/prometheus
    command:
      - --web.enable-lifecycle
      - --config.file=/cfg/prometheus2.yml
      - --storage.tsdb.path=/data
      - --storage.tsdb.retention.time=15m
      - --storage.tsdb.min-block-duration=15m
      - --storage.tsdb.max-block-duration=15m
    volumes:
      - ./cfg/prometheus2.yml:/cfg/prometheus2.yml
      - ./data/prometheus2:/data
    user: '65534'
    ports:
    - '9091:9090'

# targets
  node-exporter:
    container_name: node-exporter
    hostname: node-exporter
    image: prom/node-exporter
    # network_mode: host
    ports:
      - '9100:9100'
