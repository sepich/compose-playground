version: '2.4'
services:

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx
    volumes:
    - ./cfg/nginx.conf:/etc/nginx/nginx.conf
    - ./data/nginx:/var/cache/nginx
    user: '33'

  thanos-receive-0:
    container_name: thanos-receive-0
    hostname: thanos-receive-0
    image: thanosio/thanos:v0.15.0
    command:
      - receive
      - --tsdb.path=/data
      - --tsdb.retention=1d
      - --tsdb.min-block-duration=30m
      - --tsdb.max-block-duration=30m
      - --label=replica="thanos-receive-0"
      - --receive.local-endpoint=thanos-receive-0:10901
#      - --receive.hashrings-file=/cfg/hashrings.json
#      - --receive.replication-factor=2
    volumes:
      - ./cfg/hashrings.json:/cfg/hashrings.json
      - ./data/thanos-receive-0:/data
      - ./data/s3:/s3
    user: '65534'
    ports:
      - 10900:10902  # pprof

  thanos-receive-1:
    container_name: thanos-receive-1
    hostname: thanos-receive-1
    image: thanosio/thanos:v0.15.0
    command:
      - receive
      - --tsdb.path=/data
      - --tsdb.retention=1d
      - --tsdb.min-block-duration=30m
      - --tsdb.max-block-duration=30m
      - --label=replica="thanos-receive-1"
      - --receive.local-endpoint=thanos-receive-1:10901
#      - --receive.hashrings-file=/cfg/hashrings.json
#      - --receive.replication-factor=2
    volumes:
      - ./cfg/hashrings.json:/cfg/hashrings.json
      - ./data/thanos-receive-1:/data
      - ./data/s3:/s3
    user: '65534'

  thanos-query:
    container_name: thanos-query
    hostname: thanos-query
    image: thanosio/thanos:v0.15.0
    command:
      - query
      - --query.auto-downsampling
      - --query.partial-response
      - --query.replica-label=replica
      - --query.replica-label=tenant_id
      - --store=dns+thanos-receive-0:10901
      - --store=dns+thanos-receive-1:10901
    user: '65534'
    ports:
    - 10902:10902

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    command:
      - --web.enable-lifecycle
      - --config.file=/cfg/prometheus.yml
      - --storage.tsdb.path=/data
      - --storage.tsdb.retention.time=15m
      - --storage.tsdb.min-block-duration=15m
      - --storage.tsdb.max-block-duration=15m
    volumes:
      - ./cfg/prometheus.yml:/cfg/prometheus.yml
      - ./data/prometheus:/data
    user: '65534'
    ports:
    - '9090:9090'

  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana:7.1.0
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/cfg/grafana.ini
    volumes:
      - ./cfg/grafana.ini:/cfg/grafana.ini
      - ./cfg/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./cfg/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./cfg/dashboards:/var/lib/grafana/dashboards
    ports:
      - '3000:3000'

# targets
  node-exporter:
    container_name: node-exporter
    hostname: node-exporter
    image: prom/node-exporter
    # network_mode: host
    ports:
      - '9100:9100'

  avalanche-1:
    container_name: avalanche-1
    hostname: avalanche-1
    image: quay.io/freshtracks.io/avalanche:latest
    command:
      - --metric-count=3000
      - --series-interval=3600
      - --metric-interval=7200
  avalanche-2:
    container_name: avalanche-2
    hostname: avalanche-2
    image: quay.io/freshtracks.io/avalanche:latest
    command:
      - --metric-count=3000
      - --series-interval=3600
      - --metric-interval=7200
  avalanche-3:
    container_name: avalanche-3
    hostname: avalanche-3
    image: quay.io/freshtracks.io/avalanche:latest
    command:
      - --metric-count=3000
      - --series-interval=3600
      - --metric-interval=7200
